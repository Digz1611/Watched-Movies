slightly adjust the isLoggedIn to use a JWT so that different things are liked to different users, 
    - so sort backend to link posts to users
fix the issue with the edit, delete nd most importantly create that takes you to /login instead of
    - /movies/create
    - movies/edit/:id
    - movies/delete/:id




// one of the things to integrate
BlogPost.find({ userid: userId }, (err, posts) => {
    if (err) {
        // Handle error
    }
    // `posts` will only contain blog posts where `userid` matches `userId`
});

BlogPost.findById(postId, (err, post) => {
    if (err || !post) {
        // Handle error or post not found
    }
    if (post.userid.toString() !== userId.toString()) {
        // Handle unauthorized access
    } else {
        // Proceed with update or delete
    }
});





// one of the things to integrate
app.use(session({
    secret: 'your-secret-key', // Secret key used to sign the session ID cookie
    resave: false, // Prevents saving the session to the store if it was not modified
    saveUninitialized: false // Prevents saving a new, uninitialized session to the store
}));




// one of the things to integrate
global.loggedIn = null; // Initializes a global variable `loggedIn` with a null value

app.use("*", (req, res, next) => {
    loggedIn = req.session.userId; // Sets `loggedIn` to the user ID stored in the session
    next(); // Passes control to the next middleware or route handler
});
